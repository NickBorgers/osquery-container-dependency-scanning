SELECT * FROM (
/* Get all pids and all files mapped into memory by those processes */
WITH pid_memory_mappings AS (SELECT DISTINCT
    proc.path,
    proc.cmdline,
    proc.pid AS pid,
    mmap.path AS mmap_path
FROM process_memory_map AS mmap
LEFT JOIN processes AS proc USING(pid))
/* Run yara on all files mapped into memory by running proccesses */
SELECT containers.image AS container_image, pid_memory_mappings.path AS executable, pid_memory_mappings.mmap_path AS dependency
/* Start with our first query */
FROM pid_memory_mappings
/* Join yara table to run yara query, joining on the file paths of mapped memory */
JOIN yara ON yara.path = pid_memory_mappings.mmap_path
/* Additionally pull any Docker image this pid is running from */
LEFT OUTER JOIN docker_containers AS containers ON containers.pid = pid_memory_mappings.pid
/* Set pid_with_namespace for yara table based on the pid we're inspecting */
WHERE yara.pid_with_namespace = pid_memory_mappings.pid
/* Actual Yara rule to inspect files with */
AND sigrule = 'rule openssl_3 {
        strings:
                $re1 = /OpenSSL\s3\.[0-6]{1}\.[0-9]{1}[a-z]{,1}/
        condition:
                $re1
}
'
/* Only pull back results where we got a yara hit */
AND yara.count > 0
) as real_query LIMIT 5;